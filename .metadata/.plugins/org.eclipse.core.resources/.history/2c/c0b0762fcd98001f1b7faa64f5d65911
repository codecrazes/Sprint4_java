package br.com.fiap.resource;

import java.sql.SQLException;
import java.util.List;
import javax.ws.rs.*;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;
import javax.ws.rs.core.UriInfo;
import javax.ws.rs.core.MediaType;

import br.com.fiap.bo.CarroBO;
import br.com.fiap.model.Carro;

@Path("/carro")
public class CarroResource {
    
    private CarroBO carroBO = new CarroBO();
    
    @GET
    public Response listarRs() throws ClassNotFoundException {
        try {
            List<Carro> carros = carroBO.listarBo();
            return Response.ok(carros).build();
        } catch (SQLException e) {
            return Response.serverError().entity("Erro ao listar carros: " + e.getMessage()).build();
        }
    }
    
    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    public Response inserirRs(Carro carro, @Context UriInfo uriInfo) throws ClassNotFoundException {
        try {
            carroBO.inserirBo(carro);
            UriBuilder builder = uriInfo.getAbsolutePathBuilder();
            builder.path(Integer.toString(carro.getIdCarro()));
            return Response.created(builder.build()).build();  
        } catch (SQLException e) {
            return Response.serverError().entity("Erro ao inserir carro: " + e.getMessage()).build();
        }
    }
    
    @PUT
    @Path("/{idCarro}")
    @Consumes(MediaType.APPLICATION_JSON)
    public Response atualizarRs(Carro carro, @PathParam("idCarro") int idCarro) throws ClassNotFoundException {
        try {
            carro.setIdCarro(idCarro);
            carroBO.atualizarBo(carro);
            return Response.ok().build();
        } catch (SQLException e) {
            return Response.serverError().entity("Erro ao atualizar carro: " + e.getMessage()).build();
        }
    }
    
    @DELETE
    @Path("/{idCarro}")
    public Response deletarRs(@PathParam("idCarro") int idCarro) throws ClassNotFoundException {
        try {
            carroBO.deletarBo(idCarro);
            return Response.ok().build();
        } catch (SQLException e) {
            return Response.serverError().entity("Erro ao deletar carro: " + e.getMessage()).build();
        }
    }
}
